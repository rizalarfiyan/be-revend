{
    // Place your be-revend workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    "Create repository": {
        "scope": "go",
        "prefix": "repo",
        "body": [
            "package repository",
            "",
            "type Repository interface {",
            "    $1",
            "}",
            ""
        ],
        "description": "Create repository"
    },
    "Create repository implementation": {
        "scope": "go",
        "prefix": "repoimpl",
        "body": [
            "package repository",
            "",
            "import (",
            "    \"github.com/jackc/pgx/v5/pgxpool\"",
            "    \"github.com/rizalarfiyan/be-revend/internal/sql\"",
            ")",
            "",
            "type repository struct {",
            "    db    *pgxpool.Pool",
            "    query *sql.Queries",
            "}",
            "",
            "func New$1Repository(db *pgxpool.Pool) Repository {",
            "    return &repository{",
            "        db:    db,",
            "        query: sql.New(db),",
            "    }",
            "}",
            ""
        ],
        "description": "Create repository implementation"
    },
    "Create repository and redis implementation": {
        "scope": "go",
        "prefix": "repoimplredis",
        "body": [
            "package repository",
            "",
            "import (",
            "    \"github.com/jackc/pgx/v5/pgxpool\"",
            "    \"github.com/rizalarfiyan/be-revend/database\"",
            "    \"github.com/rizalarfiyan/be-revend/internal/sql\"",
            ")",
            "",
            "type repository struct {",
            "    db    *pgxpool.Pool",
            "    query *sql.Queries",
            "    redis database.RedisInstance",
            "}",
            "",
            "func New$1Repository(db *pgxpool.Pool, redis database.RedisInstance) Repository {",
            "    return &repository{",
            "        db:    db,",
            "        query: sql.New(db),",
            "        redis: redis,",
            "    }",
            "}",
            ""
        ],
        "description": "Create repository and redis implementation"
    }
}
